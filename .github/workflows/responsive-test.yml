name: Responsive Design Tests

on:
  push:
    branches: [ main, feature/responsive-design ]
  pull_request:
    branches: [ main ]

jobs:
  responsive-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        viewport: [mobile, tablet, desktop]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run responsive tests
      run: npm run test:responsive
      env:
        VIEWPORT: ${{ matrix.viewport }}
        
    - name: Run visual regression tests
      run: npm run test:visual
      if: matrix.viewport == 'desktop'
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}-${{ matrix.viewport }}
        path: |
          coverage/
          test-results/
          
  responsive-lighthouse:
    runs-on: ubuntu-latest
    needs: responsive-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: npm run preview &
      
    - name: Wait for application to start
      run: sleep 10
      
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
  responsive-accessibility:
    runs-on: ubuntu-latest
    needs: responsive-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run accessibility tests
      run: npm run test:a11y
      
    - name: Run axe-core tests
      run: npm run test:axe
      
  responsive-performance:
    runs-on: ubuntu-latest
    needs: responsive-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Analyze bundle size
      run: npm run analyze
      
    - name: Run performance tests
      run: npm run test:performance
      
  responsive-deployment:
    runs-on: ubuntu-latest
    needs: [responsive-tests, responsive-lighthouse, responsive-accessibility, responsive-performance]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to staging
      run: npm run deploy:staging
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        
    - name: Run smoke tests on staging
      run: npm run test:smoke
      env:
        BASE_URL: ${{ secrets.STAGING_URL }}
        
    - name: Deploy to production
      run: npm run deploy:production
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
      if: success()
